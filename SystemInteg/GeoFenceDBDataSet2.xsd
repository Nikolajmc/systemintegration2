<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GeoFenceDBDataSet2" targetNamespace="http://tempuri.org/GeoFenceDBDataSet2.xsd" xmlns:mstns="http://tempuri.org/GeoFenceDBDataSet2.xsd" xmlns="http://tempuri.org/GeoFenceDBDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GeoFenceDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GeoFenceDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SystemInteg.Properties.Settings.GlobalReference.Default.GeoFenceDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachersTableAdapter" GeneratorDataComponentClassName="TeachersTableAdapter" Name="Teachers" UserDataComponentName="TeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GeoFenceDBConnectionString (Settings)" DbObjectName="GeoFenceDB.dbo.Teachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teachers] WHERE (([Id] = @Original_Id) AND ((@IsNull_Teacher_Name = 1 AND [Teacher_Name] IS NULL) OR ([Teacher_Name] = @Original_Teacher_Name)) AND ((@IsNull_Classes = 1 AND [Classes] IS NULL) OR ([Classes] = @Original_Classes)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Teacher_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Teacher_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Classes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Classes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teachers] ([Teacher_Name], [Classes]) VALUES (@Teacher_Name, @Classes);
SELECT Id, Teacher_Name, Classes FROM Teachers WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Teacher_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Classes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Teacher_Name, Classes FROM dbo.Teachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teachers] SET [Teacher_Name] = @Teacher_Name, [Classes] = @Classes WHERE (([Id] = @Original_Id) AND ((@IsNull_Teacher_Name = 1 AND [Teacher_Name] IS NULL) OR ([Teacher_Name] = @Original_Teacher_Name)) AND ((@IsNull_Classes = 1 AND [Classes] IS NULL) OR ([Classes] = @Original_Classes)));
SELECT Id, Teacher_Name, Classes FROM Teachers WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Teacher_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Classes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Teacher_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Teacher_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Classes" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Classes" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Classes" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="GeoFenceDB.dbo.Teachers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Teacher_Name" DataSetColumn="Teacher_Name" />
              <Mapping SourceColumn="Classes" DataSetColumn="Classes" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GeoFenceDBDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="GeoFenceDBDataSet2" msprop:Generator_DataSetName="GeoFenceDBDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Teachers" msprop:Generator_RowEvHandlerName="TeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachersRowDeleted" msprop:Generator_RowDeletingName="TeachersRowDeleting" msprop:Generator_RowEvArgName="TeachersRowChangeEvent" msprop:Generator_TablePropName="Teachers" msprop:Generator_RowChangedName="TeachersRowChanged" msprop:Generator_RowChangingName="TeachersRowChanging" msprop:Generator_TableClassName="TeachersDataTable" msprop:Generator_RowClassName="TeachersRow" msprop:Generator_TableVarName="tableTeachers" msprop:Generator_UserTableName="Teachers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Teacher_Name" msprop:Generator_ColumnPropNameInRow="Teacher_Name" msprop:Generator_ColumnPropNameInTable="Teacher_NameColumn" msprop:Generator_ColumnVarNameInTable="columnTeacher_Name" msprop:Generator_UserColumnName="Teacher_Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Classes" msprop:Generator_ColumnPropNameInRow="Classes" msprop:Generator_ColumnPropNameInTable="ClassesColumn" msprop:Generator_ColumnVarNameInTable="columnClasses" msprop:Generator_UserColumnName="Classes" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teachers" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>